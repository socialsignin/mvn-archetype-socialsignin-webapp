<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:security="http://www.springframework.org/schema/security"


	xsi:schemaLocation="  http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd        
                http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- Start Spring Social -->

	<bean id="connectionFactoryRegistry" class="org.springframework.social.connect.support.ConnectionFactoryRegistry" />

	<bean class="org.springframework.social.connect.web.ProviderSignInController">
		<constructor-arg value="${application.secureUrl}" />
		<property name="signUpUrl" value="/signup" />
		<property name="applicationUrl" value="${application.secureUrl}" />
		<property name="postSignInUrl" value="/authenticate" />


		<!-- relies on by-type autowiring for the other constructor-args -->
	</bean>

	<bean class="org.springframework.social.connect.web.ConnectController">
		<!-- relies on by-type autowiring for the constructor-args -->
		<property name="applicationUrl" value="${application.secureUrl}" />

		<property name="interceptors" ref="connectInterceptorList">
		</property>
	</bean>

	<bean id="usersConnectionRepository"
		class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="connectionFactoryRegistry" />
		<constructor-arg ref="textEncryptor" />
	</bean>
	
	<!-- 
	Use this definition of usersConnectionRepository instead  if implicit local username generation is to be used - ie.
		instead of sending user to a form to confirm their local username we just use the username
		from the 3rd party.  Registers a connectionSignUp for implicit signin and uses SpringSocialSecurityJdbcUsersConnectionRepository
		to work around issue with connectionSignUp returning null if implit signin is not possible
		(if username already taken for example). 
	
	<bean id="usersConnectionRepository"
		class="org.socialsignin.springframework.social.security.connect.jdbc.SpringSocialSecurityJdbcUsersConnectionRepository">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="connectionFactoryRegistry" />
		<constructor-arg ref="textEncryptor" />		
		<property name="connectionSignUp" ref="springSocialSecurityConnectionSignUp" />

	</bean>
-->

	<bean
		class="org.springframework.social.connect.jdbc.JdbcConnectionRepository"
		id="connectionRepository" factory-method="createConnectionRepository"
		factory-bean="usersConnectionRepository" scope="request">
		<constructor-arg value="#{request.userPrincipal.name}" />
		<aop:scoped-proxy proxy-target-class="true" />
	</bean>


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>org.hsqldb.jdbcDriver</value>
		</property>
		<property name="url">
			<value>jdbc:hsqldb:mem:socialsignin</value>
		</property>
		<property name="username">
			<value>sa</value>
		</property>
		<property name="password">
			<value></value>
		</property>
		<property name="defaultAutoCommit">
			<value>true</value>
		</property>
	</bean>

	<bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors"
		factory-method="noOpText" />

	<!-- End Spring Social -->

</beans>
